package com.sunfusheng.StickyHeaderListView;import android.app.Activity;import android.content.Context;import android.content.Intent;import android.os.Bundle;import android.os.Handler;import android.support.v7.app.AppCompatActivity;import android.util.Log;import android.view.View;import android.widget.AbsListView;import android.widget.FrameLayout;import android.widget.ImageView;import android.widget.RelativeLayout;import android.widget.TextView;import com.bumptech.glide.Glide;import com.sunfusheng.StickyHeaderListView.adapter.TravelingAdapter;import com.sunfusheng.StickyHeaderListView.model.TravelingEntity;import com.sunfusheng.StickyHeaderListView.util.ColorUtil;import com.sunfusheng.StickyHeaderListView.util.DensityUtil;import com.sunfusheng.StickyHeaderListView.util.ModelUtil;import com.sunfusheng.StickyHeaderListView.util.StatusBarUtil;import com.sunfusheng.StickyHeaderListView.util.ToastUtil;import com.sunfusheng.StickyHeaderListView.view.FilterView;import com.sunfusheng.StickyHeaderListView.view.SmoothListView.SmoothListView;import java.util.ArrayList;import java.util.Arrays;import java.util.List;import butterknife.BindView;import butterknife.ButterKnife;import cn.bingoogolapple.bgabanner.BGABanner;/** * 作者：孙福生 * <p> * 个人博客：sunfusheng.com */public class Main0Activity extends AppCompatActivity implements SmoothListView.ISmoothListViewListener {    @BindView(R.id.listView)    SmoothListView smoothListView;    @BindView(R.id.real_filterView)    FilterView realFilterView;    @BindView(R.id.rl_bar)    RelativeLayout rlBar;    @BindView(R.id.tv_title)    TextView tvTitle;    @BindView(R.id.view_title_bg)    View viewTitleBg;    @BindView(R.id.view_action_more_bg)    View viewActionMoreBg;    @BindView(R.id.fl_action_more)    FrameLayout flActionMore;    private Context mContext;    private Activity mActivity;    private List<TravelingEntity> travelingList = new ArrayList<>(); // ListView数据    private TravelingAdapter mAdapter;    private int titleViewHeight = 65; // 标题栏的高度    private View itemHeaderBannerView; // 从ListView获取的广告子View    private int bannerViewHeight = 180; // 广告视图的高度    private int bannerViewTopMargin; // 广告视图距离顶部的距离    private View itemHeaderFilterView; // 从ListView获取的筛选子View    private int filterViewPosition = 4; // 筛选视图的位置    private int filterViewTopMargin; // 筛选视图距离顶部的距离    private boolean isScrollIdle = true; // ListView是否在滑动    private boolean isStickyTop = false; // 是否吸附在顶部    private boolean isSmooth = false; // 没有吸附的前提下，是否在滑动    private List<String> bannerList;    private BGABanner banner_guide_content;    private String[]  tipsList=new String[]{"aaa","bbb","ccc","ddd"};    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        ButterKnife.bind(this);        //设置沉浸状态栏        StatusBarUtil.setStatusBarTranslucent(this, false);        initData();        initView();        initListener();    }    private void initData() {        mContext = this;        mActivity = this;        // 广告数据        bannerList = ModelUtil.getBannerData();        // ListView数据        travelingList = ModelUtil.getTravelingData();    }    private void initView() {        // 设置广告数据        View  headerBannerViewTwo=View.inflate(this,R.layout.header_banner_view,null);        smoothListView.addHeaderView(headerBannerViewTwo);        banner_guide_content= (BGABanner) headerBannerViewTwo.findViewById(R.id.banner_guide_content);        //设置第二个头部view        View  lineView=View.inflate(this,R.layout.line_view,null);        smoothListView.addHeaderView(lineView);        // 设置ListView数据        mAdapter = new TravelingAdapter(this, travelingList);        smoothListView.setAdapter(mAdapter);        smoothListView.setRefreshTime("right now");        banner_guide_content.setData(bannerList, Arrays.asList(tipsList));        banner_guide_content.setAdapter(new BGABanner.Adapter<ImageView,String>() {            @Override            public void fillBannerItem(BGABanner banner, ImageView itemView, String model, int position) {                Glide.with(Main0Activity.this)                        .load(model)                        .placeholder(R.color.font_black_5)                        .error(R.color.font_black_5)                        .centerCrop()                        .dontAnimate()                        .into(itemView);            }        });        banner_guide_content.setDelegate(new BGABanner.Delegate<ImageView,String>() {            @Override            public void onBannerItemClick(BGABanner banner, ImageView itemView, String model, int position) {                ToastUtil.show(Main0Activity.this,"点击了图片"+position);            }        });        filterViewPosition = smoothListView.getHeaderViewsCount() - 1;    }    private void initListener() {        // 关于        flActionMore.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                startActivity(new Intent(mActivity, AboutActivity.class));            }        });        smoothListView.setRefreshEnable(true);        smoothListView.setLoadMoreEnable(true);        smoothListView.setSmoothListViewListener(this);        smoothListView.setOnScrollListener(new SmoothListView.OnSmoothScrollListener() {            @Override            public void onSmoothScrolling(View view) {            }            @Override            public void onScrollStateChanged(AbsListView view, int scrollState) {                isScrollIdle = (scrollState == AbsListView.OnScrollListener.SCROLL_STATE_IDLE);            }            @Override            public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) {                if (isScrollIdle && bannerViewTopMargin < 0)                    return;                // 获取广告头部View、自身的高度、距离顶部的高度                if (itemHeaderBannerView == null) {                    itemHeaderBannerView = smoothListView.getChildAt(1);                }                if (itemHeaderBannerView != null) {                    bannerViewTopMargin = DensityUtil.px2dip(mContext, itemHeaderBannerView.getTop());                    bannerViewHeight = DensityUtil.px2dip(mContext, itemHeaderBannerView.getHeight());                }                // 获取筛选View、距离顶部的高度                if (itemHeaderFilterView == null) {                    itemHeaderFilterView = smoothListView.getChildAt(filterViewPosition - firstVisibleItem);                }                if (itemHeaderFilterView != null) {                    filterViewTopMargin = DensityUtil.px2dip(mContext, itemHeaderFilterView.getTop());                }                // 处理筛选是否吸附在顶部                if (filterViewTopMargin <= titleViewHeight || firstVisibleItem > filterViewPosition) {                    isStickyTop = true; // 吸附在顶部                } else {                    isStickyTop = false; // 没有吸附在顶部                }                if (isSmooth && isStickyTop) {                    isSmooth = false;                }                Log.i("TAG","bannerViewTopMargin:"+bannerViewTopMargin+"---bannerViewHeight:"+bannerViewHeight+"---titleViewHeight:"+titleViewHeight);                // 处理标题栏颜色渐变                handleTitleBarColorEvaluate();            }        });    }    // 处理标题栏颜色渐变    private void handleTitleBarColorEvaluate() {        float fraction;        if (bannerViewTopMargin > 0) {            fraction = 1f - bannerViewTopMargin * 1f / 60;            if (fraction < 0f) {                fraction = 0f;            }            rlBar.setAlpha(fraction);            return;        }        float space = Math.abs(bannerViewTopMargin) * 1f;        fraction = space / (bannerViewHeight - titleViewHeight);        if (fraction < 0f) fraction = 0f;        if (fraction > 1f) fraction = 1f;        rlBar.setAlpha(1f);        if (fraction >= 1f || isStickyTop) {            isStickyTop = true;            viewTitleBg.setAlpha(0f);            viewActionMoreBg.setAlpha(0f);            rlBar.setBackgroundColor(mContext.getResources().getColor(R.color.colorPrimary));        } else {            viewTitleBg.setAlpha(1f - fraction);            viewActionMoreBg.setAlpha(1f - fraction);            rlBar.setBackgroundColor(ColorUtil.getNewColorByStartEndColor(mContext, fraction, R.color.transparent, R.color.colorPrimary));        }    }    @Override    protected void onResume() {        super.onResume();    }    @Override    protected void onStop() {        super.onStop();    }    @Override    public void onRefresh() {        new Handler().postDelayed(new Runnable() {            @Override            public void run() {                smoothListView.stopRefresh();                smoothListView.setRefreshTime("right now");            }        }, 2000);    }    @Override    public void onLoadMore() {        new Handler().postDelayed(new Runnable() {            @Override            public void run() {                smoothListView.setLoadMoreEnable(false);            }        }, 2000);    }}